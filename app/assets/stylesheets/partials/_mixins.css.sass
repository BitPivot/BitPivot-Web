@import 'variables'



// Media Queries
=breakpoint($media)
  @if $media == "tiny"
    @media (max-width: $breakpoint-tiny)
      @content

  @if $media == "narrow"
    @media (max-width: $breakpoint-narrow)
      @content

  @if $media == "wide"
    @media (min-width: $breakpoint-narrow + 1)
      @content

  @if $media == "landscape"
    @media screen and (orientation: landscape)
      @content

  @if $media == 'non-retina'
    @media screen and (-webkit-max-device-pixel-ratio: 1)
      @content

  @if $media == 'retina'
    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-resolution: 2dppx)
      @content



// Retina capable sprites
=sprite($image, $width, $height, $type: 'png', $retina: true)
  display: block
  float: left
  width: $width
  height: $height
  background: url("#{$image}.#{$type}") top left no-repeat
  background-size: $width $height
  @if $retina == true
    +breakpoint(retina)
      background-image: url("#{$image}@2x.#{$type}")



// Position shorthand
=position($position, $top: false, $right: false, $bottom: false, $left: false)
  position: $position
  @if $top and $right and $bottom and $left
    top: $top
    right: $right
    bottom: $bottom
    left: $left
  @if $top and $right and $bottom and not $left
    top: $top
    right: $right
    bottom: $bottom
    left: $right
  @if $top and $right and not $bottom and not $left
    top: $top
    right: $right
    bottom: $top
    left: $right
  @if $top and not $right and not $bottom and not $left
    top: $top
    right: $top
    bottom: $top
    left: $top



// RGBA with fallback
=background-rgba-fallback($rgba)
  background: rgb(red($rgba), green($rgba), blue($rgba))
  background: $rgba



// Gradients
=gradient-radial($start, $end: false)
  @if not $end
    $end: darken($start, 5%)

  background: $start
  background-image: -ms-radial-gradient(center, circle farthest-corner, $start 0%, $end 100%)
  background-image: -moz-radial-gradient(center, circle farthest-corner, $start 0%, $end 100%)
  background-image: -o-radial-gradient(center, circle farthest-corner, $start 0%, $end 100%)
  background-image: -webkit-gradient(radial, center center, 0, center center, 497, color-stop(0, $start), color-stop(1, $end))
  background-image: -webkit-radial-gradient(center, circle farthest-corner, $start 0%, $end 100%)
  background-image: radial-gradient(circle farthest-corner at center, $start 0%, $end 100%)



// Drop shadows
=no-drop-shadow()
  -webkit-box-shadow: none
  -moz-box-shadow: none
  box-shadow: none

=drop-shadow-bottom($size, $color: rgba(0, 0, 0, 1))
  -webkit-box-shadow: 0px 0px $size $color
  -moz-box-shadow: 0px 0px $size $color
  box-shadow: 0px 0px $size $color



// Vendor polyfills
=background-size-cover
  -webkit-background-size: cover
  -moz-background-size: cover
  -o-background-size: cover
  background-size: cover

=box-sizing-border-box
  -webkit-box-sizing: border-box
  -moz-box-sizing: border-box
  box-sizing: border-box



// Transitions
=transition($transition)
  -webkit-backface-visibility: hidden
  -webkit-perspective: 1000
  -moz-transition: $transition
  -webkit-transition: $transition
  -ms-transition: $transition
  -o-transition: $transition
  transition: $transition



// Font faces (via TypeKit)
=font($font-size, $font-color, $font-family: false)
  font-size: $font-size
  color: $font-color

  @if $font-family == 'pragmatica-extra-light'
    font-family: 'pragmatica-web', 'Helvetica Neue', Helvetica, Arial, sans-serif
    font-weight: 200
    font-style: normal

  @if $font-family == 'pragmatica-light'
    font-family: 'pragmatica-web', 'Helvetica Neue', Helvetica, Arial, sans-serif
    font-weight: 300
    font-style: normal

  @if $font-family == 'pragmatica-bold'
    font-family: 'pragmatica-web', 'Helvetica Neue', Helvetica, Arial, sans-serif
    font-weight: 700
    font-style: normal



// Reusable typography components
=h1-border
  padding-bottom: $margin / 4
  border-bottom: $blind-content-header-border-width solid $blind-content-header-border-color

=type-pad-bottom
  margin-bottom: $margin

  &:last-child
    margin-bottom: 0