---
title: Rails 4 on OSX Lion
subtitle: From Zero to Hello World
author: Sean Kennedy
year: 2013
month: 7
day: 10
categories:
- osx
- homebrew
- xcode
- rvm
- ruby
- rails
---

<!-- Paste contents of <body> from Mou exported html file below -->


<p>Development with Ruby on Rails can be a very productive and rewarding experience, but it has gained a reputation among the development community as being very painful to initially set up, especially if you are using Rails for the first time. A recent factory reset on OSX Lion means coaxing Ruby 2 and Rails 4 to play nicely with each other once again, so I’ve decided to take some extra time and document each step along the way for reference.  The result should be a working rails project.</p>

<h2>Step 1: Homebrew</h2>

<p>Go over to <a href="http://brew.sh">http://brew.sh</a> and install and update homebrew.</p>

<pre><code class='shell'>$ ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)" &amp;&amp; brew update
</code></pre>

<p>Running <code>brew doctor</code>, warns that I haven't accepted the XCode license and don't have XCode's Command Line Tools.</p>

<h2>Step 2: XCode + Command Line Tools</h2>

<p>Install the latest version of XCode from the App Store, fire it up and open Preferences.  Under the Downloads tab, install Command Line Tools.</p>

<p>The default gcc compiler installed with XCode works, but some features are <a href="http://stackoverflow.com/questions/14045359/cant-install-ruby-on-mountain-lion-with-rvm">buggy</a>, so let's grab Unix's standard command line tools, as well as a stand alone version of gcc-4.2.</p>

<pre><code class='shell'>$ brew tap homebrew/dupes &amp;&amp; brew install apple-gcc42
</code></pre>

<p>Running <code>brew doctor</code> again reveals another warning that <code>/usr/bin</code> occurs before <code>/usr/local/bin</code>.  To fix this error, add the following to <code>~/.profile</code></p>

<pre><code class='python'>homebrew=/usr/local/bin:/usr/local/sbin
export PATH=$homebrew:$PATH
</code></pre>

<p>Running <code>brew doctor</code> should reveal the system is "ready to brew".</p>

<h2>Step 3: RVM (Ruby Version Manager)</h2>

<p>Install RVM by running the following in terminal.</p>

<pre><code class='shell'>$ bash &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
</code></pre>

<p>Now add the following to your <code>~/.profile</code>.</p>

<pre><code class='shell'>[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; . "$HOME/.rvm/scripts/rvm"
</code></pre>

<p>Restarting the terminal, let's confirm RVM is actually there.</p>

<pre><code class='shell'>$ rvm -v

rvm 1.21.8 () by Wayne E. Seguin &lt;wayneeseguin@gmail.com&gt;, Michal Papis &lt;mpapis@gmail.com&gt; [https://rvm.io/]
</code></pre>

<h2>Step 4: Ruby 2.0</h2>

<p>At this point, we don't have Ruby 2 yet.</p>

<pre><code class='shell'>$ ruby -v

ruby 1.8.7 (2012-02-08 patchlevel 358) [universal-darwin11.0]`
</code></pre>

<p>Let's upgrade to Ruby 2.</p>

<pre><code class='shell'>$ rvm install ruby-2.0.0-p247
</code></pre>

<p>Assuming all goes smoothly, running <code>rvm list</code> should show Ruby 2.</p>

<pre><code class='shell'>$ rvm list

rvm rubies

=* ruby-2.0.0-p247 [ x86_64 ]

# =&gt; - current
# =* - current &amp;&amp; default
#  * - default
</code></pre>

<p>Just to make sure…</p>

<pre><code class='shell'>$ ruby -v

ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin11.4.2]
</code></pre>

<p>Neat.</p>

<h2>Step 5: Rails 4.0</h2>

<p>We don't yet have rails, so let's install it.</p>

<pre><code class='shell'>$ gem install rails --version 4.0.0
</code></pre>

<p>Sanity check.</p>

<pre><code class='shell'>$ rails -v

Rails 4.0.0
</code></pre>

<h2>Step 6: Test Drive</h2>

<p>Let's try setting up a brand new rails project.</p>

<pre><code class='shell'>$ rails new TestDrive &amp;&amp; cd TestDrive
</code></pre>

<p>Make sure all gems are updated.</p>

<pre><code class='shell'>$ bundle update
</code></pre>

<p>Now start up your rails server.</p>

<pre><code class='shell'>$ rails server
</code></pre>

<p>Navigate to <code>localhost:3000</code> and you should see the "Welcome Aboard" page.</p>